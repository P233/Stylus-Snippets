{
	"scope": "source.stylus",

	"completions": [
		{ "trigger": "!important", "contents": "!important" },
		{ "trigger": "inherit", "contents": "inherit" },
		{ "trigger": "transparent", "contents": "transparent" },
		{ "trigger": "rgb()", "contents": "rgb($1)" },
		{ "trigger": "rgba()", "contents": "rgba($1)" },
		{ "trigger": "hsl()", "contents": "hsl($1)" },
		{ "trigger": "hsla()", "contents": "hsla($1)" },
		{ "trigger": "calc()", "contents": "calc($1)" },
		{ "trigger": "rect()", "contents": "rect($1)" },
		{ "trigger": "url()", "contents": "url($1)" },
		{ "trigger": "attr()", "contents": "attr($1)" },
		{ "trigger": "counter()", "contents": "counter($1)" },
		{ "trigger": "counters()", "contents": "counters($1)" },
		{ "trigger": "matrix()", "contents": "matrix($1)" },
		{ "trigger": "matrix3D()", "contents": "matrix3D($1)" },
		{ "trigger": "rotate()", "contents": "rotate($1)" },
		{ "trigger": "rotate3D()", "contents": "rotate3D($1)" },
		{ "trigger": "rotateX()", "contents": "rotateX($1)" },
		{ "trigger": "rotateY()", "contents": "rotateY($1)" },
		{ "trigger": "rotateZ()", "contents": "rotateZ($1)" },
		{ "trigger": "scale()", "contents": "scale($1)" },
		{ "trigger": "scale3D()", "contents": "scale3D($1)" },
		{ "trigger": "scaleX()", "contents": "scaleX($1)" },
		{ "trigger": "scaleY()", "contents": "scaleY($1)" },
		{ "trigger": "scaleZ()", "contents": "scaleZ($1)" },
		{ "trigger": "skew()", "contents": "skew($1)" },
		{ "trigger": "skewX()", "contents": "skewX($1)" },
		{ "trigger": "skewY()", "contents": "skewY($1)" },
		{ "trigger": "translate()", "contents": "translate($1)" },
		{ "trigger": "translate3D()", "contents": "translate3D($1)" },
		{ "trigger": "translateX()", "contents": "translateX($1)" },
		{ "trigger": "translateY()", "contents": "translateY($1)" },
		{ "trigger": "translateZ()", "contents": "translateZ($1)" },
		{ "trigger": "cubic-bezier()", "contents": "cubic-bezier($1)" },
		{ "trigger": "steps()", "contents": "steps($1)" },
		{ "trigger": "linear-gradient()", "contents": "linear-gradient($1)" },
		{ "trigger": "radial-gradient()", "contents": "radial-gradient($1)" },
		{ "trigger": "repeating-linear-gradient()", "contents": "repeating-linear-gradient($1)" },
		{ "trigger": "repeating-radial-gradient()", "contents": "repeating-radial-gradient($1)" },
		{ "trigger": "red()", "contents": "red($1)" },
		{ "trigger": "green()", "contents": "green($1)" },
		{ "trigger": "blue()", "contents": "blue($1)" },
		{ "trigger": "alpha()", "contents": "alpha($1)" },
		{ "trigger": "dark()", "contents": "dark($1)" },
		{ "trigger": "light()", "contents": "light($1)" },
		{ "trigger": "hue()", "contents": "hue($1)" },
		{ "trigger": "saturation()", "contents": "saturation($1)" },
		{ "trigger": "lightness()", "contents": "lightness($1)" },
		{ "trigger": "push()", "contents": "push($1)" },
		{ "trigger": "unshift()", "contents": "unshift($1)" },
		{ "trigger": "keys()", "contents": "keys($1)" },
		{ "trigger": "values()", "contents": "values($1)" },
		{ "trigger": "list-separator()", "contents": "list-separator($1)" },
		{ "trigger": "typeof()", "contents": "typeof($1)" },
		{ "trigger": "unit()", "contents": "unit($1)" },
		{ "trigger": "match()", "contents": "match($1)" },
		{ "trigger": "abs()", "contents": "abs($1)" },
		{ "trigger": "ceil()", "contents": "ceil($1)" },
		{ "trigger": "floor()", "contents": "floor($1)" },
		{ "trigger": "round()", "contents": "round($1)" },
		{ "trigger": "sin()", "contents": "sin($1)" },
		{ "trigger": "cos()", "contents": "cos($1)" },
		{ "trigger": "tan()", "contents": "tan($1)" },
		{ "trigger": "min()", "contents": "min($1)" },
		{ "trigger": "max()", "contents": "max($1)" },
		{ "trigger": "even()", "contents": "even($1)" },
		{ "trigger": "odd()", "contents": "odd($1)" },
		{ "trigger": "sum()", "contents": "sum($1)" },
		{ "trigger": "avg()", "contents": "avg($1)" },
		{ "trigger": "base-convert()", "contents": "base-convert($1)" },
		{ "trigger": "join()", "contents": "join($1)" },
		{ "trigger": "hsla()", "contents": "hsla($1)" },
		{ "trigger": "hsl()", "contents": "hsl($1)" },
		{ "trigger": "rgba()", "contents": "rgba($1)" },
		{ "trigger": "rgb()", "contents": "rgb($1)" },
		{ "trigger": "blend()", "contents": "blend($1)" },
		{ "trigger": "lighten()", "contents": "lighten($1)" },
		{ "trigger": "darken()", "contents": "darken($1)" },
		{ "trigger": "desaturate()", "contents": "desaturate($1)" },
		{ "trigger": "saturate()", "contents": "saturate($1)" },
		{ "trigger": "complement()", "contents": "complement($1)" },
		{ "trigger": "invert()", "contents": "invert($1)" },
		{ "trigger": "grayscale()", "contents": "grayscale($1)" },
		{ "trigger": "tint()", "contents": "tint($1)" },
		{ "trigger": "shade()", "contents": "shade($1)" },
		{ "trigger": "luminosity()", "contents": "luminosity($1)" },
		{ "trigger": "contrast()", "contents": "contrast($1)" },
		{ "trigger": "transparentify()", "contents": "transparentify($1)" },
		{ "trigger": "unquote()", "contents": "unquote($1)" },
		{ "trigger": "convert()", "contents": "convert($1)" },
		{ "trigger": "basename()", "contents": "basename($1)" },
		{ "trigger": "dirname()", "contents": "dirname($1)" },
		{ "trigger": "extname()", "contents": "extname($1)" },
		{ "trigger": "pathjoin()", "contents": "pathjoin($1)" },
		{ "trigger": "called-from", "contents": "called-from" },
		{ "trigger": "current-media()", "contents": "current-media($1)" },
		{ "trigger": "cache()", "contents": "+cache($1)" },
		{ "trigger": "prefix-classes()", "contents": "+prefix-classes($1)" },
		{ "trigger": "lookup()", "contents": "lookup($1)" },
		{ "trigger": "define()", "contents": "define($1)" },
		{ "trigger": "operate()", "contents": "operate($1)" },
		{ "trigger": "length()", "contents": "length($1)" },
		{ "trigger": "selector()", "contents": "selector($1)" },
		{ "trigger": "warn()", "contents": "warn($1)" },
		{ "trigger": "error()", "contents": "error($1)" },
		{ "trigger": "last()", "contents": "last($1)" },
		{ "trigger": "opposite-position()", "contents": "opposite-position($1)" },
		{ "trigger": "image-size()", "contents": "image-size($1)" },
		{ "trigger": "add-property()", "contents": "add-property($1)" },
		{ "trigger": "use()", "contents": "use($1)" }
	]
}